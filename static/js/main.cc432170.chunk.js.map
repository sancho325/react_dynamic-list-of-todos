{"version":3,"sources":["types/Filter.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","todoOpener","className","map","todo","id","completed","undefined","title","type","onClick","TodoFilter","getQuery","selectedFilter","useState","queryChange","setQueryChange","useEffect","onChange","event","target","value","ALL","ACTIVE","COMPLITED","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","modalCloser","isLoaded","setIsLoaded","user","setUser","userId","userFromServer","href","email","name","App","setTodos","visibleTodos","setVisibleTodos","query","setQuery","filter","setFilter","isTodoLoaded","setTodoLoaded","savedTodo","setSavedTodo","modalIsOpened","setModalIsOpened","loadTodos","a","todosFromServer","searchByWord","params","toLowerCase","toLocaleLowerCase","includes","userQuery","userFilter","ReactDOM","render","document","getElementById"],"mappings":"iLAAYA,E,0ECQCC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAV,OACvC,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGF,EAAMG,KAAI,SAAAC,GAAI,OACb,qBACE,UAAQ,OACRF,UAAU,GAFZ,UAKE,oBAAIA,UAAU,eAAd,SAA8BE,EAAKC,KACnC,oBAAIH,UAAU,eAAd,SACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,WAA8B,IAAnBE,EAAKE,UACf,oBACAC,QAIR,oBAAIL,UAAU,2BAAd,SACE,mBACEA,WAA8B,IAAnBE,EAAKE,UACZ,mBACA,kBAHN,SAKGF,EAAKI,UAGV,oBAAIN,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,kBAAMT,EAAWG,IAJ5B,SAME,sBAAMF,UAAU,OAAhB,SACE,mBAAGA,UAAU,uBA5BdE,EAAKC,c,SD5BRP,K,UAAAA,E,gBAAAA,E,uBAAAA,M,KEQL,IAAMa,EAA8B,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,eACtD,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAIA,OAFAC,qBAAU,kBAAML,EAASG,KAAc,CAACA,IAGtC,uBAAMb,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRgB,SAAU,SAACC,GAAD,OAAWN,EAAeM,EAAMC,OAAOC,QAFnD,UAIE,wBAAQA,MAAOvB,EAAOwB,IAAtB,iBACA,wBAAQD,MAAOvB,EAAOyB,OAAtB,oBACA,wBAAQF,MAAOvB,EAAO0B,UAAtB,8BAKN,oBAAGtB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACVuB,YAAY,YACZJ,MAAON,EACPG,SAAU,SAACC,GAAD,OAAWH,EAAeG,EAAMC,OAAOC,UAEnD,sBAAMnB,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGda,GAEC,sBAAMb,UAAU,gBAAgBwB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRlB,KAAK,SACLP,UAAU,SACVQ,QAAS,kBAAMM,EAAe,gBCrC5C,SAASY,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,U,MAGd,IClBMC,EAAmB,kBAC9B,qBAAKrC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,uBCMNsC,EAA6B,SAAC,GAA2B,IAAzBpC,EAAwB,EAAxBA,KAAMqC,EAAkB,EAAlBA,YACjD,EAAgC3B,oBAAS,GAAzC,mBAAO4B,EAAP,KAAiBC,EAAjB,KACA,EAAwB7B,qBAAxB,mBAAO8B,EAAP,KAAaC,EAAb,KAUA,OARA5B,qBAAU,WFQW,IAAC6B,KEPZ1C,EAAK0C,OFO0BlB,EAAG,iBAAiBkB,KENxDX,MAAK,SAAAY,GACJF,EAAQE,GACRJ,GAAY,QAEf,IAGD,sBAAKzC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEbwC,EAGA,sBAAKxC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,sBACEA,UAAU,0CACV,UAAQ,eAFV,mBAKGE,EAAKC,MAIR,wBACEI,KAAK,SACLP,UAAU,SACV,UAAQ,cACRQ,QAAS+B,OAIb,sBAAKvC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGE,EAAKI,QAGR,oBAAGN,UAAU,QAAQ,UAAQ,aAA7B,UACGE,EAAKE,UACF,wBAAQJ,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBAEH,OAED,mBAAG8C,KAAI,wBAAYJ,QAAZ,IAAYA,OAAZ,EAAYA,EAAMK,OAAzB,gBACGL,QADH,IACGA,OADH,EACGA,EAAMM,gBAlCf,cAAC,EAAD,QCfKC,EAAgB,WAC3B,MAA0BrC,mBAAiB,IAA3C,mBAAOd,EAAP,KAAcoD,EAAd,KACA,EAAwCtC,mBAAiB,IAAzD,mBAAOuC,EAAP,KAAqBC,EAArB,KACA,EAA0BxC,mBAAS,IAAnC,mBAAOyC,EAAP,KAAcC,EAAd,KACA,EAA4B1C,mBAAiBhB,EAAOwB,KAApD,mBAAOmC,EAAP,KAAeC,EAAf,KACA,EAAsC5C,oBAAkB,GAAxD,mBAAO6C,EAAP,KAAqBC,EAArB,KACA,EAAkC9C,qBAAlC,mBAAO+C,EAAP,KAAkBC,EAAlB,KACA,EAA0ChD,oBAAS,GAAnD,mBAAOiD,EAAP,KAAsBC,EAAtB,KAEA/C,qBAAU,WACR,IAAMgD,EAAS,uCAAG,sBAAAC,EAAA,sEHFQtC,EAAY,UGIjCO,MAAK,SAAAgC,GACJf,EAASe,GACTb,EAAgBa,MAJJ,OAOhBP,GAAc,GAPE,2CAAH,qDAUfK,MACC,IAEH,IAAMG,EAAe,SAAC5D,GACpB,IAAM6D,EAASd,EAAMe,cAErB,OAAO9D,EAAM+D,oBAAoBC,SAASH,IAG5CpD,qBAAU,WACR,OAAQwC,GACN,KAAK3D,EAAOwB,IACVgC,EAAgBtD,EAAMyD,QAAO,SAAArD,GAAI,OAAIgE,EAAahE,EAAKI,WACvD,MAEF,KAAKV,EAAOyB,OACV+B,EAAgBtD,EAAMyD,QAAO,SAAArD,GAAI,OAAKA,EAAKE,WAAa8D,EAAahE,EAAKI,WAC1E,MAEF,KAAKV,EAAO0B,UACV8B,EAAgBtD,EAAMyD,QAAO,SAAArD,GAAI,OAAIA,EAAKE,WAAa8D,EAAahE,EAAKI,cAK5E,CAAC+C,EAAOE,IAmBX,OACE,qCACE,qBAAKvD,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEU,SAjBG,SAAC6D,GAChBjB,EAASiB,IAiBG5D,eAdS,SAAC6D,GACtBhB,EAAUgB,QAiBF,qBAAKxE,UAAU,QAAf,SACIyD,EAEEA,GACA,cAAC,EAAD,CACE3D,MAAOqD,EACPpD,WArCC,SAACG,GAClB0D,EAAa1D,GACb4D,GAAiB,MA+BH,cAAC,EAAD,aAYXD,GACEF,GAED,cAAC,EAAD,CACEzD,KAAMyD,EACNpB,YA7CY,WAClBuB,GAAiB,UC/DrBW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cc432170.chunk.js","sourcesContent":["export enum Filter {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLITED = 'complited',\n}\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  todoOpener: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, todoOpener }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <th className=\"is-vcentered\">\n            <span className=\"icon\">\n              <i className={todo.completed === true\n                ? 'fas fa-check'\n                : undefined}\n              />\n            </span>\n          </th>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={todo.completed === true\n                ? 'has-text-success'\n                : 'has-text-danger'}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => todoOpener(todo)}\n            >\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  getQuery: (option: string) => void,\n  selectedFilter: (searchWord: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({ getQuery, selectedFilter }) => {\n  const [queryChange, setQueryChange] = useState('');\n\n  useEffect(() => getQuery(queryChange), [queryChange]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => selectedFilter(event.target.value)}\n          >\n            <option value={Filter.ALL}>All</option>\n            <option value={Filter.ACTIVE}>Active</option>\n            <option value={Filter.COMPLITED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={queryChange}\n          onChange={(event) => setQueryChange(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {queryChange\n        && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQueryChange('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  modalCloser: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, modalCloser }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(userFromServer => {\n        setUser(userFromServer);\n        setIsLoaded(true);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isLoaded ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={modalCloser}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Filter } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState<string>(Filter.ALL);\n  const [isTodoLoaded, setTodoLoaded] = useState<boolean>(false);\n  const [savedTodo, setSavedTodo] = useState<Todo>();\n  const [modalIsOpened, setModalIsOpened] = useState(false);\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      await getTodos()\n        .then(todosFromServer => {\n          setTodos(todosFromServer);\n          setVisibleTodos(todosFromServer);\n        });\n\n      setTodoLoaded(true);\n    };\n\n    loadTodos();\n  }, []);\n\n  const searchByWord = (title: string) => {\n    const params = query.toLowerCase();\n\n    return title.toLocaleLowerCase().includes(params);\n  };\n\n  useEffect(() => {\n    switch (filter) {\n      case Filter.ALL:\n        setVisibleTodos(todos.filter(todo => searchByWord(todo.title)));\n        break;\n\n      case Filter.ACTIVE:\n        setVisibleTodos(todos.filter(todo => !todo.completed && searchByWord(todo.title)));\n        break;\n\n      case Filter.COMPLITED:\n        setVisibleTodos(todos.filter(todo => todo.completed && searchByWord(todo.title)));\n        break;\n      default:\n        break;\n    }\n  }, [query, filter]);\n\n  const todoOpener = (todo: Todo) => {\n    setSavedTodo(todo);\n    setModalIsOpened(true);\n  };\n\n  const modalCloser = () => {\n    setModalIsOpened(false);\n  };\n\n  const getQuery = (userQuery: string) => {\n    setQuery(userQuery);\n  };\n\n  const selectedFilter = (userFilter: string) => {\n    setFilter(userFilter);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                getQuery={getQuery}\n                selectedFilter={selectedFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isTodoLoaded\n                ? <Loader />\n                : isTodoLoaded && (\n                  <TodoList\n                    todos={visibleTodos}\n                    todoOpener={todoOpener}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {modalIsOpened\n      && savedTodo\n      && (\n        <TodoModal\n          todo={savedTodo}\n          modalCloser={modalCloser}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}